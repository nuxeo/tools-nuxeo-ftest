<project name="nuxeo-ftest"
         default="run-selenium"
         xmlns:nx="urn:nuxeo-build"
         xmlns:artifact="urn:nuxeo-artifact">
  <taskdef resource="org/nuxeo/build/antlib.xml" uri="urn:nuxeo-build" />
  <taskdef resource="org/nuxeo/build/artifact/antlib.xml"
           uri="urn:nuxeo-artifact" />
  <taskdef resource="net/sf/antcontrib/antlib.xml" />

  <property name="nuxeoURL" value="http://localhost:8080/nuxeo/" />
  <property name="browser" value="chrome" />
  <property name="out.dir" value="${maven.project.build.directory}" />
  <property name="suites" value="null" />

  <target name="_init" unless="_init.done">
    <property name="_init.done" value="true" />
    <property environment="env" />
    <condition property="osfamily-unix">
      <os family="unix" />
    </condition>
    <condition property="osfamily-windows">
      <os family="windows" />
    </condition>
    <condition property="nuxeo.home" value="${out.dir}/tomcat">
      <isset property="maven.profile.tomcat" />
    </condition>
    <condition property="nuxeo.home" value="${out.dir}/jboss">
      <isset property="maven.profile.jboss" />
    </condition>
    <condition property="classifier" value="nuxeo-dm">
      <not>
        <isset property="classifier" />
      </not>
    </condition>
  </target>

  <target name="run-selenium" depends="_init">
    <antcall target="prepare-environment" />
    <antcall target="prepare-selenium" />

    <property name="standard.selenium.args1"
              value="-jar ${out.dir}/selenium-server.jar" />
    <property name="standard.selenium.args2"
              value="-log ${out.dir}/selenium-debug.log" />
    <property name="standard.selenium.args3" value="-port 14440" />
    <property name="standard.selenium.args4" value="-timeout 7200" />
    <property name="standard.selenium.args5"
              value="-userExtensions ${out.dir}/user-extensions.js" />
    <property name="standard.selenium.args6"
              value="-htmlSuite *${browser} ${nuxeoURL}" />
    <condition property="browser.specific.selenium.arg" value="-port 14440">
      <not>
        <equals arg1="${browser}" arg2="chrome" />
      </not>
    </condition>
    <condition property="browser.specific.selenium.arg"
               value="-firefoxProfileTemplate ${out.dir}/ffprofile">
      <equals arg1="${browser}" arg2="chrome" />
    </condition>

    <antcall target="start" />

    <echo>java ${standard.selenium.args1} ${standard.selenium.args2} ${standard.selenium.args3} \
      ${standard.selenium.args4} ${standard.selenium.args5} ${standard.selenium.args6} ${browser.specific.selenium.arg}</echo>
    <for list="${suites}" param="suite">
      <sequential>
        <echo>Suite @{suite}</echo>
        <exec executable="java"
              output="${out.dir}/selenium.log"
              resultproperty="seleniumResult"
              failonerror="false">
          <arg line="${standard.selenium.args1}" />
          <arg line="${standard.selenium.args2}" />
          <arg line="${standard.selenium.args3}" />
          <arg line="${standard.selenium.args4}" />
          <arg line="${standard.selenium.args5}" />
          <arg line="${standard.selenium.args6}" />
          <arg line="tests/@{suite}.html" />
          <arg line="${out.dir}/results/result-@{suite}.html" />
          <arg line="${browser.specific.selenium.arg}" />
        </exec>
      </sequential>
    </for>

    <antcall target="stop" />

    <fail status="${seleniumResult}">
      <condition>
        <not>
          <equals arg1="${seleniumResult}" arg2="0" />
        </not>
      </condition>
    </fail>
  </target>

  <target name="prepare-tomcat" depends="_init">
    <echo>Prepare Tomcat...</echo>
    <delete failonerror="false" dir="${nuxeo.home}" />
    <antcall target="download">
      <param name="groupId" value="org.nuxeo.ecm.distribution" />
      <param name="artifactId" value="nuxeo-distribution-tomcat" />
    </antcall>
    <antcall target="unzip-local" />
    <antcall target="nuxeo-conf" />
  </target>

  <target name="prepare-jboss" depends="_init">
    <echo>Prepare JBoss...</echo>
    <delete failonerror="false" dir="${nuxeo.home}" />
    <antcall target="download">
      <param name="groupId" value="org.nuxeo.ecm.distribution" />
      <param name="artifactId" value="nuxeo-distribution-jboss" />
    </antcall>
    <antcall target="unzip-local" />
    <antcall target="nuxeo-conf" />
  </target>

  <target name="prepare-environment"
          depends="_init"
          description="prepare all ressources for test">
    <nx:profile name="tomcat">
      <antcall target="prepare-tomcat" />
    </nx:profile>
    <nx:profile name="jboss">
      <antcall target="prepare-jboss" />
    </nx:profile>
  </target>

  <target name="download" unless="zip.file">
    <unzip dest="${nuxeo.home}/">
      <artifact:resolveFile key="${groupId}:${artifactId}::zip:${classifier}" />
      <cutdirsmapper dirs="1" />
    </unzip>
  </target>
  <target name="unzip-local" if="zip.file">
    <echo message="Using local archive ${zip.file}" />
    <unzip dest="${nuxeo.home}/" src="${zip.file}">
      <cutdirsmapper dirs="1" />
    </unzip>
  </target>

  <target name="prepare-selenium"
          description="prepare Selenium files for tests">
    <copy tofile="${out.dir}/selenium-server.jar">
      <artifact:resolveFile key="org.seleniumhq.selenium:selenium-server::jar:standalone" />
    </copy>
    <echo>Replace local folder in user-extensions.js</echo>
    <path id="data.dir.path">
      <pathelement location="data" />
    </path>
    <pathconvert refid="data.dir.path" property="data.dir.path.for.currentos" />
    <copy file="${out.dir}/user-extensions.js.sample"
          tofile="${out.dir}/user-extensions.js"
          overwrite="true" />
    <echo>Set into user-extensions-browser.js project path ${data.dir.path.for.currentos}</echo>
    <antcall target="user-extensions" />
    <echo>Replace url in prefs.js</echo>
    <copy file="${out.dir}/ffprofile/prefs.js.sample"
          tofile="${out.dir}/ffprofile/prefs.js"
          overwrite="true" />
    <replace file="${out.dir}/ffprofile/prefs.js"
             token="ApplicationServerURL"
             value="${nuxeoURL}" />
  </target>

  <target name="user-extensions"
          depends="user-extensions-for-unix,user-extensions-for-windows">
  </target>
  <target name="user-extensions-for-windows" if="osfamily-windows">
    <replace file="${out.dir}/user-extensions.js"
             token="/path/to/project-ear/ftest/selenium/data/"
             value="${data.dir.path.for.currentos}\" />
    <replace file="${out.dir}/user-extensions.js" token="\" value="\\" />
  </target>
  <target name="user-extensions-for-unix" if="osfamily-unix">
    <replace file="${out.dir}/user-extensions.js"
             token="/path/to/project-ear/ftest/selenium/data/"
             value="${data.dir.path.for.currentos}/" />
  </target>

  <target name="start" depends="_init,stop,start-unix,start-windows" />
  <target name="start-unix" if="osfamily-unix">
    <chmod dir="${nuxeo.home}/bin" perm="ug+x" includes="*.sh,*ctl" />
    <exec executable="${nuxeo.home}/bin/nuxeoctl" spawn="false">
      <arg value="start" />
    </exec>
  </target>
  <target name="start-windows" if="osfamily-windows">
    <exec executable="${nuxeo.home}/bin/nuxeoctl.bat" spawn="false">
      <arg value="nogui" />
      <arg value="start" />
    </exec>
  </target>

  <target name="stop" depends="_init,stop-unix,stop-windows" />
  <target name="stop-unix" if="osfamily-unix">
    <chmod dir="${nuxeo.home}/bin" perm="ug+x" includes="*.sh,*ctl" />
    <exec executable="${nuxeo.home}/bin/nuxeoctl" spawn="false">
      <arg value="stop" />
    </exec>
  </target>
  <target name="stop-windows" if="osfamily-windows">
    <exec executable="${nuxeo.home}/bin/nuxeoctl.bat" spawn="false">
      <arg value="nogui" />
      <arg value="stop" />
    </exec>
  </target>

  <target name="wizard-on" depends="_init">
    <echo append="true" file="${nuxeo.home}/bin/nuxeo.conf">nuxeo.wizard.done=false${line.separator}</echo>
  </target>
  <target name="wizard-off">
    <echo append="true" file="${nuxeo.home}/bin/nuxeo.conf">nuxeo.wizard.done=false${line.separator}</echo>
  </target>

  <target name="set-java-home"
          if="env.NX_JAVA_HOME"
          depends="_init"
          description="Set JAVA_HOME in nuxeo.conf with env.NX_JAVA_HOME value, if defined.">
    <echo append="true" file="${nuxeo.home}/bin/nuxeo.conf">JAVA_HOME=${env.NX_JAVA_HOME}${line.separator}</echo>
    <echo message="Using JAVA_HOME=${env.NX_JAVA_HOME}." />
  </target>

  <target name="nuxeo-conf"
          depends="_init,set-java-home"
          description="Configure nuxeo.conf depending on environment values.">
  </target>

</project>
